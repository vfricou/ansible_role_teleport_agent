---
- name: 'Configure | Configure teleport for specific unit'
  when:
    - "teleport_unit_name != 'teleport'"
    - "'teleport-cluster' not in group_names"
  become: true
  become_user: 'root'
  tags:
    - install
    - configure
  ansible.builtin.import_tasks: 'configure/custom_unit.yml'

- name: 'Configure | Generate token to link host to cluster'
  become: true
  become_user: 'root'
  tags:
    - install
    - enroll
  block:
    - name: 'Configure | Delete existing token to renew for current host'  # noqa command-instead-of-shell no-changed-when
      when: join_token is defined
      delegate_to: "{{ groups['teleport-cluster'][0] }}"
      ansible.builtin.shell: "tctl tokens rm {{ join_token }}"

    - name: 'Configure | Generate a new node token'  # noqa command-instead-of-shell no-changed-when
      when: join_token is not defined
      register: join_token
      delegate_to: "{{ groups['teleport-cluster'][0] }}"
      ansible.builtin.shell: "tctl tokens add --ttl={{ teleport_token_ttl }} --type={{ teleport_token_type }} --format=json"


    - name: 'Configure | Set facts with token'
      ansible.builtin.set_fact:
        token: "{{ join_token.stdout | from_json | json_query('token') }}"

    - name: 'Configure | Deploy configuration to host'
      when:
        - "'teleport-cluster' not in group_names"
      notify: 'Restart teleport'
      ansible.builtin.template:
        dest: '/etc/{{ teleport_unit_name }}.yaml'
        src: 'etc/teleport.yml.j2'
        owner: 'root'
        group: 'root'
        mode: '0640'

- name: 'Configure | Load and decode teleport configuration as yaml file'
  tags:
    - configure
  block:
    - name: 'Configure | Retreive existing configuration file content'
      register: teleport_config_slurp
      become: true
      become_user: 'root'
      ansible.builtin.slurp:
        src: '/etc/{{ teleport_unit_name }}.yaml'


    - name: 'Configure | Decode and store configuration as variable'
      ansible.builtin.set_fact:
        teleport_config_content: "{{ teleport_config_slurp.content | b64decode | from_yaml }}"

    - name: 'Configure | Set token with existing token'
      when: teleport_config_content['teleport']['proxy_server'] is defined
      ansible.builtin.set_fact:
        token: "{{ teleport_config_content['teleport']['join_params']['token_name'] }}"
        teleport_cluster_capin: "{{ teleport_config_content['teleport']['ca_pin'] }}"
        teleport_cluster: "{{ teleport_config_content['teleport']['proxy_server'] }}"

    - name: 'Configure | Set token with existing token'
      when: teleport_config_content['teleport']['auth_server'] is defined
      ansible.builtin.set_fact:
        token: "{{ teleport_config_content['teleport']['join_params']['token_name'] }}"
        teleport_cluster_capin: "{{ teleport_config_content['teleport']['ca_pin'] }}"
        teleport_cluster: "{{ teleport_config_content['teleport']['auth_server'] }}"

    - name: 'Configure | Deploy configuration to host'
      become: true
      become_user: 'root'
      notify: 'Restart teleport'
      when:
        - "'teleport-cluster' not in group_names"
      ansible.builtin.template:
        dest: '/etc/{{ teleport_unit_name }}.yaml'
        src: 'etc/teleport.yml.j2'
        owner: 'root'
        group: 'root'
        mode: '0640'

