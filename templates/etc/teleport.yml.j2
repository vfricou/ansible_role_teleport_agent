version: v3
teleport:
  nodename: {{ ansible_facts['hostname'] }}
  data_dir: /var/lib/{{ teleport_unit_name }}
  join_params:
    token_name: {{ token }}
    method: token
{% if 'app' in teleport_token_type %}
  proxy_server: '{{ teleport_cluster }}'
{% else %}
  auth_server: '{{ teleport_cluster }}'
{% endif %}
  log:
    output: stderr
    severity: INFO
    format:
      output: text
  ca_pin: {{ teleport_cluster_capin }}
  diag_addr: ""
auth_service:
  enabled: "no"
{% if teleport_app_configs is defined %}
app_service:
  enabled: true
  debug_app: {{ teleport_debug_app }}
  apps:
{% for apps in teleport_app_configs %}
    - name: "{{ apps.name }}"
      uri: "{{ apps.uri }}"
      public_addr: "{{ apps.public_addr }}"
{% if apps.insecure_skip_verify is defined and apps.insecure_skip_verify %}
      insecure_skip_verify: true
{% endif %}
      labels:
{% for key, value in apps['labels'].items() %}
        {{ key }}: "{{ value }}"
{% endfor %}
{% endfor %}
{% endif %}
proxy_service:
  enabled: "no"
  https_keypairs: []
  acme: {}
ssh_service:
  enabled: "yes"
{% if teleport_node_labels is defined %}
  labels:
{% for label, value in teleport_node_labels.items() %}
    {{ label }}: {{ value }}
{% endfor %}
{% endif %}
{% if teleport_node_commands is defined %}
  commands:
{% for name in teleport_node_commands %}
    - name: {{ name }}
{% for cmdkey, cmdvalue in teleport_node_commands[name].items() %}
      {{ cmdkey }}: {{ cmdvalue }}
{% endfor %}
{% endfor %}
{% endif %}
